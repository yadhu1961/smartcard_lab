Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega644.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              ./pin_change_int.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              ./pin_change_int.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

bit_array           0xa               ./pin_change_int.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega644.o
LOAD ./pin_change_int.o
LOAD ./uart_debug.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libatmega644.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x348
 *(.vectors)
 .vectors       0x0000000000000000       0x70 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega644.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000070                . = ALIGN (0x2)
                0x0000000000000070                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000070        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000070                __trampolines_end = .
 *(.progmem*)
                0x0000000000000070                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000070                __ctors_start = .
 *(.ctors)
                0x0000000000000070                __ctors_end = .
                0x0000000000000070                __dtors_start = .
 *(.dtors)
                0x0000000000000070                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000070        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega644.o
                0x0000000000000070                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000070        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega644.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000007c       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x000000000000007c                __do_copy_data
 .init4         0x0000000000000092       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000092                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000a2        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega644.o
 *(.init9)
 *(.text)
 .text          0x00000000000000aa        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega644.o
                0x00000000000000aa                __vector_22
                0x00000000000000aa                __vector_1
                0x00000000000000aa                __vector_24
                0x00000000000000aa                __vector_12
                0x00000000000000aa                __bad_interrupt
                0x00000000000000aa                __vector_6
                0x00000000000000aa                __vector_3
                0x00000000000000aa                __vector_23
                0x00000000000000aa                __vector_25
                0x00000000000000aa                __vector_11
                0x00000000000000aa                __vector_13
                0x00000000000000aa                __vector_17
                0x00000000000000aa                __vector_19
                0x00000000000000aa                __vector_7
                0x00000000000000aa                __vector_27
                0x00000000000000aa                __vector_4
                0x00000000000000aa                __vector_2
                0x00000000000000aa                __vector_21
                0x00000000000000aa                __vector_15
                0x00000000000000aa                __vector_8
                0x00000000000000aa                __vector_26
                0x00000000000000aa                __vector_14
                0x00000000000000aa                __vector_10
                0x00000000000000aa                __vector_16
                0x00000000000000aa                __vector_18
                0x00000000000000aa                __vector_20
 .text          0x00000000000000ae        0x0 ./pin_change_int.o
 .text          0x00000000000000ae        0x0 ./uart_debug.o
 .text          0x00000000000000ae        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x00000000000000ae        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000000ae        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000ae                . = ALIGN (0x2)
 *(.text.*)
 .text.config_interrupt_oc
                0x00000000000000ae       0x1c ./pin_change_int.o
                0x00000000000000ae                config_interrupt_oc
 .text.enable_TIMER2
                0x00000000000000ca        0xc ./pin_change_int.o
                0x00000000000000ca                enable_TIMER2
 .text.disable_TIMER2
                0x00000000000000d6        0xc ./pin_change_int.o
                0x00000000000000d6                disable_TIMER2
 .text.reset_TIMER2
                0x00000000000000e2        0x6 ./pin_change_int.o
                0x00000000000000e2                reset_TIMER2
 .text.config_PCINT
                0x00000000000000e8        0xc ./pin_change_int.o
                0x00000000000000e8                config_PCINT
 .text.enable_PCINT
                0x00000000000000f4        0xc ./pin_change_int.o
                0x00000000000000f4                enable_PCINT
 .text.disable_PCINT
                0x0000000000000100        0xc ./pin_change_int.o
                0x0000000000000100                disable_PCINT
 .text.set_RX   0x000000000000010c        0x4 ./pin_change_int.o
                0x000000000000010c                set_RX
 .text.startup.main
                0x0000000000000110       0x5e ./pin_change_int.o
                0x0000000000000110                main
 .text.bitarray_2_byte
                0x000000000000016e       0x3e ./pin_change_int.o
                0x000000000000016e                bitarray_2_byte
 .text.__vector_9
                0x00000000000001ac       0xe2 ./pin_change_int.o
                0x00000000000001ac                __vector_9
 .text.__vector_5
                0x000000000000028e       0x5e ./pin_change_int.o
                0x000000000000028e                __vector_5
 .text.USARTWriteChar
                0x00000000000002ec        0xe ./uart_debug.o
                0x00000000000002ec                USARTWriteChar
 .text.USARTInit
                0x00000000000002fa       0x16 ./uart_debug.o
                0x00000000000002fa                USARTInit
 .text.serial_printf
                0x0000000000000310       0x34 ./uart_debug.o
                0x0000000000000310                serial_printf
 .text.libgcc.mul
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000344                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000344        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x0000000000000344                exit
                0x0000000000000344                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000344        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000348                _etext = .

.data           0x0000000000800100        0x2 load address 0x0000000000000348
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega644.o
 .data          0x0000000000800100        0x0 ./pin_change_int.o
 .data          0x0000000000800100        0x0 ./uart_debug.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.rx_done  0x0000000000800100        0x1 ./pin_change_int.o
                0x0000000000800100                rx_done
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
 *fill*         0x0000000000800101        0x1 
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102       0x11
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega644.o
 .bss           0x0000000000800102        0x0 ./pin_change_int.o
 .bss           0x0000000000800102        0x0 ./uart_debug.o
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.samples   0x0000000000800102        0x3 ./pin_change_int.o
                0x0000000000800102                samples
 .bss.rx_active
                0x0000000000800105        0x1 ./pin_change_int.o
                0x0000000000800105                rx_active
 .bss.bits_count
                0x0000000000800106        0x1 ./pin_change_int.o
                0x0000000000800106                bits_count
 .bss.bit       0x0000000000800107        0x1 ./pin_change_int.o
                0x0000000000800107                bit
 .bss.sample_counter
                0x0000000000800108        0x1 ./pin_change_int.o
                0x0000000000800108                sample_counter
 *(COMMON)
 COMMON         0x0000000000800109        0xa ./pin_change_int.o
                0x0000000000800109                bit_array
                0x0000000000800113                PROVIDE (__bss_end, .)
                0x0000000000000348                __data_load_start = LOADADDR (.data)
                0x000000000000034a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800113        0x0
                0x0000000000800113                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800113                PROVIDE (__noinit_end, .)
                0x0000000000800113                _end = .
                0x0000000000800113                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./pin_change_int.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./uart_debug.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega644.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(pin_change_int.elf elf32-avr)
LOAD linker stubs
